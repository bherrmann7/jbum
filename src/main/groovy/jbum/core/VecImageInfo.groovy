/*
 * generated by http://jadn.com:8080/util/vecGen.html on Sun Oct 22 09:29:05 EDT
 * 2000
 */

package jbum.core

public class VecImageInfo implements java.io.Serializable {
    static final long serialVersionUID = -3259743450740459827L;

    private Vector<ImageInfo> vec = new Vector<ImageInfo>();

    public VecImageInfo() {
    }

    VecImageInfo(ImageInfo[] elements) {
        add(elements);
    }

    public void add(ImageInfo element) {
        vec.add(element);
    }

    public void addFirst(ImageInfo element) {
        vec.add(0, element);
    }

    public void remove(ImageInfo element) {
        vec.remove(element);
    }

    public void add(ImageInfo[] elements) {
        for (int i = 0; i < elements.length; i++)
            vec.add(elements[i]);
    }

    public ImageInfo[] get() {
        ImageInfo[] array = new ImageInfo[vec.size()];
        vec.copyInto(array);
        return array;
    }

    public ImageInfo[] toArray() {
        return get();
    }

    public ImageInfo get(int i) {
        return vec.elementAt(i);
    }

    public ImageInfo getAt(int i) {
        return vec.elementAt(i);
    }

    public void set(ImageInfo elem, int i) {
        vec.setElementAt(elem, i);
    }

    public void clear() {
        vec.clear();
    }

    public int size() {
        return vec.size();
    }

    public int indexOf(ImageInfo elem) {
        return vec.indexOf(elem);
    }

    public String toString() {
        StringBuffer sb = new StringBuffer("VecImageInfo[");
        for (int i = 0; i < vec.size(); i++) {
            if (i != 0)
                sb.append(", ");
            sb.append(get(i).toString());
        }
        sb.append("]");
        return sb.toString();
    }

    public void add(int pos, ImageInfo element) {
        vec.add(pos, element);
    }

    public ArrayList<ImageInfo2> toModern() {
        ArrayList<ImageInfo2> modern = new ArrayList<ImageInfo2>(vec.size());
        for (Object iio : vec) {
            modern.add(((ImageInfo) iio).toImageInfo2());
        }
        return modern;

    }

    public Vector getVec() {
        return vec;
    }

}

