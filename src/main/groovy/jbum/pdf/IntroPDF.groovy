package jbum.pdf;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.ArrayList;
import java.util.Date;

import sun.net.www.http.Hurryable;

import com.lowagie.text.BadElementException;
import com.lowagie.text.Chunk;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.Image;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Rectangle;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;

public class IntroPDF {

	public static void main(String[] args) throws Exception {

		Rectangle r = PageSize.LETTER;
		r = new Rectangle(630F, 810F);

		Document doc = new Document(r, 53, 53, 45, 45);
		FileOutputStream fos = new FileOutputStream("intro.pdf");
		PdfWriter pdfWriter = PdfWriter.getInstance(doc, fos);

		//pdfWriter.setPDFXConformance(PdfWriter.PDFX1A2001);

		doc.open();

		writeIntro(doc, 33);

		doc.close();

		Runtime.getRuntime().exec("xpdf intro.pdf");
	}

	public static void writeIntro(Document doc, int total)
			throws DocumentException, MalformedURLException, IOException {

		// c.setBackgroundColor(meta.getBackgroundColor());

		doc.add(new Paragraph(new Chunk("Introduction", BigPDF.f24Font)));

		doc.add(new Chunk("\n", BigPDF.f12Font));

		String intro = "This is a photo book of Liam and Max Herrmann is a Christmas gift to Crystal Herrmann. "
				+ "These photos were originally posted in the year 2006 on the http://jadn.com/babypea/ web site."
				+ " This book was generated by extensions to Jbum, http://jbum.sf.net/, a simple photo album program.";
		intro += " This photo book contains over " + total
				+ " photos and was generated on "
				+ BigPageEvent.humanFormat.format(new Date());
		Paragraph pa = new Paragraph(new Chunk(intro, BigPDF.f12Font));
		doc.add(pa);
		doc.add(new Chunk("\n", BigPDF.f12Font));

		PdfPTable table = new PdfPTableNOB(2, BigPDF.f12Font);
		table.setWidthPercentage(100);

		Image img = safeEmbed(BigPDF.jadnBase + "/babypea/liam.jpg");
		img.scalePercent(100 * 72 / 300);
		PdfPCell p = new PdfPCell(img);
		p.setPadding(5);
		p.setHorizontalAlignment(Element.ALIGN_CENTER);
		p.setBorder(Rectangle.NO_BORDER);
		table.addCell(p);

		Image img2 = safeEmbed(BigPDF.jadnBase + "/babypea/max.jpg");
		img2.scalePercent(100 * 72 / 300);
		p = new PdfPCell(img2);
		p.setHorizontalAlignment(Element.ALIGN_CENTER);
		p.setBorder(Rectangle.NO_BORDER);
		table.addCell(p);

		PdfPTable table2 = new PdfPTableNOB(2, BigPDF.f12Font);

		table2.setWidths([ 1, 2 ] as float[]);

		ac(table2, "Full Name:");
		ac(table2, "Liam Benjamin Herrmann");

		ac(table2, "Born:");
		ac(table2, "8:25pm 02-Aug-2004");

		ac(table2, "Weight:");
		ac(table2, "9lb 15oz");

		ac(table2, "Height:");
		ac(table2, "23 inches");

		ac(table2, "Nickname:");
		ac(table2, "Bean, Sweet Bean");

		// pa.setSpacingAfter(5);
		table.addCell(table2);

		PdfPTable table3 = new PdfPTableNOB(2, BigPDF.f12Font);
		table3.setWidths([ 1, 2 ] as float[]);

		String[] details = [ "Full Name:", "Max Cameron Herrmann", "Born:",
				"11:13pm 24-Feb-2006", "Weight:", "7lbs 5.8oz", "Height:",
				"20 inches", "Nickname:", "Mackie, Mackie Sweets, Peanut" ] as String[]
		for (int i = 0; i < details.length; i++) {
			ac(table3, details[i]);
		}

		table.addCell(table3);

		doc.add(table);

		doc.add(new Chunk("\n", BigPDF.f12Font));

		PdfPTableNOB table4 = new PdfPTableNOB(2, BigPDF.f12Font);
		table4.setWidthPercentage(100.0f);

		File file = new File(BigPDF.jadnBase + "/babypea/banner");
		File[] files = file.listFiles();
		for (int i = 0; i < files.length; i++) {
			if (files[i].toString().indexOf("big") != -1)
				continue;
			Image img3 = safeEmbed(files[i].toString());
			img3.scalePercent(100 * 72 / 300);
			PdfPCell cell = new PdfPCell(img3);
			cell.setBorder(Rectangle.NO_BORDER);
			cell.setVerticalAlignment(Element.ALIGN_CENTER);
			cell.setHorizontalAlignment(Element.ALIGN_CENTER);
			cell.setPadding(10);
			table4.addCell(cell);

		}
		doc.add(table4);

		doc.newPage();

		Paragraph ded = new Paragraph("\n\n\n\nThis book is dedicated to Sweet Pea.",
		BigPDF.f12Font);
		ded.setAlignment(Paragraph.ALIGN_CENTER);
		doc.add(ded);

	}

	public static Image safeEmbed(String string) throws BadElementException,
			MalformedURLException, IOException {
		if (BigPDF.embedTest)
			return Image.getInstance("/home/bob/loopy.gif");
		return Image.getInstance(string);
	}

	private static void ac(PdfPTable table2, String string) {
		table2.addCell(new PdfPCell(new Phrase(
				new Chunk(string, BigPDF.f12Font))));

	}
}
